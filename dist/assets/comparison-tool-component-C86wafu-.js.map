{"version":3,"file":"comparison-tool-component-C86wafu-.js","sources":["../../src/js/components/comparison-tool-component.js"],"sourcesContent":["/**\n * Comparison Tool Component\n * Interactive comparison between CVCS and DVCS architectures\n */\n\nimport { html, css } from 'lit';\nimport { BaseComponent } from './component-registry.js';\n\nexport class GitComparisonToolComponent extends BaseComponent {\n    static properties = {\n        currentView: { type: String },\n        animationStep: { type: Number },\n        isAnimating: { type: Boolean },\n        selectedFeature: { type: String }\n    };\n\n    static styles = [\n        BaseComponent.styles,\n        css`\n            :host {\n                display: block;\n                margin: 1rem 0;\n            }\n\n            .comparison-container {\n                background: var(--card-bg);\n                border: 1px solid var(--border-color);\n                border-radius: 0.75rem;\n                padding: 2rem;\n                margin: 1rem 0;\n            }\n\n            .title {\n                font-size: 1.25rem;\n                font-weight: 600;\n                margin-bottom: 1rem;\n                color: var(--text);\n                text-align: center;\n            }\n\n            .view-toggles {\n                display: flex;\n                justify-content: center;\n                gap: 0.5rem;\n                margin-bottom: 2rem;\n            }\n\n            .toggle-btn {\n                padding: 0.75rem 1.5rem;\n                border: 1px solid var(--border-color);\n                border-radius: 0.5rem;\n                background: var(--bg);\n                color: var(--text);\n                cursor: pointer;\n                transition: all 0.2s ease;\n                font-weight: 500;\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n            }\n\n            .toggle-btn:hover {\n                border-color: var(--primary);\n                background: var(--card-bg);\n            }\n\n            .toggle-btn.active {\n                background: var(--primary);\n                color: white;\n                border-color: var(--primary);\n            }\n\n            .architecture-view {\n                min-height: 400px;\n                position: relative;\n                background: var(--bg);\n                border-radius: 0.5rem;\n                border: 1px solid var(--border-color);\n                overflow: hidden;\n            }\n\n            /* CVCS Architecture */\n            .cvcs-architecture {\n                padding: 2rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                gap: 2rem;\n            }\n\n            .central-server {\n                background: linear-gradient(135deg, #ef4444, #dc2626);\n                color: white;\n                border-radius: 0.75rem;\n                padding: 1.5rem;\n                text-align: center;\n                min-width: 200px;\n                position: relative;\n                box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);\n            }\n\n            .central-server::before {\n                content: '⚠️';\n                position: absolute;\n                top: -10px;\n                right: -10px;\n                background: #f59e0b;\n                border-radius: 50%;\n                width: 30px;\n                height: 30px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                font-size: 0.875rem;\n            }\n\n            .clients-grid {\n                display: grid;\n                grid-template-columns: repeat(3, 1fr);\n                gap: 1rem;\n                width: 100%;\n                max-width: 600px;\n            }\n\n            .client-node {\n                background: var(--card-bg);\n                border: 2px solid var(--border-color);\n                border-radius: 0.5rem;\n                padding: 1rem;\n                text-align: center;\n                position: relative;\n            }\n\n            .client-node.limited {\n                border-color: #f59e0b;\n                background: rgba(245, 158, 11, 0.1);\n            }\n\n            /* DVCS Architecture */\n            .dvcs-architecture {\n                padding: 2rem;\n                display: grid;\n                grid-template-columns: repeat(3, 1fr);\n                grid-template-rows: repeat(3, 1fr);\n                gap: 1rem;\n                place-items: center;\n            }\n\n            .developer-node {\n                background: linear-gradient(135deg, var(--primary), var(--secondary));\n                color: white;\n                border-radius: 0.75rem;\n                padding: 1rem;\n                text-align: center;\n                min-width: 120px;\n                position: relative;\n                box-shadow: 0 4px 15px rgba(37, 99, 235, 0.3);\n                transition: all 0.3s ease;\n            }\n\n            .developer-node:hover {\n                transform: scale(1.05);\n                box-shadow: 0 8px 25px rgba(37, 99, 235, 0.4);\n            }\n\n            .developer-node.complete {\n                background: linear-gradient(135deg, var(--success), #059669);\n            }\n\n            .developer-node::after {\n                content: '✓ Full History';\n                position: absolute;\n                bottom: -25px;\n                left: 50%;\n                transform: translateX(-50%);\n                font-size: 0.625rem;\n                color: var(--success);\n                font-weight: 600;\n            }\n\n            /* Connection Lines */\n            .connections {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            .connection-line {\n                stroke: var(--primary);\n                stroke-width: 2;\n                stroke-dasharray: 5,5;\n                opacity: 0.6;\n                animation: flow 2s linear infinite;\n            }\n\n            .connection-line.bidirectional {\n                stroke: var(--success);\n                stroke-width: 3;\n                opacity: 0.8;\n            }\n\n            /* Feature Comparison */\n            .feature-comparison {\n                margin-top: 2rem;\n                display: grid;\n                grid-template-columns: 1fr 1fr;\n                gap: 1rem;\n            }\n\n            .feature-card {\n                background: var(--card-bg);\n                border: 1px solid var(--border-color);\n                border-radius: 0.5rem;\n                padding: 1rem;\n                cursor: pointer;\n                transition: all 0.2s ease;\n            }\n\n            .feature-card:hover {\n                border-color: var(--primary);\n                transform: translateY(-2px);\n            }\n\n            .feature-card.selected {\n                border-color: var(--primary);\n                background: rgba(37, 99, 235, 0.05);\n            }\n\n            .feature-card.cvcs {\n                border-left: 4px solid #ef4444;\n            }\n\n            .feature-card.dvcs {\n                border-left: 4px solid var(--success);\n            }\n\n            .feature-title {\n                font-weight: 600;\n                color: var(--text);\n                margin-bottom: 0.5rem;\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n            }\n\n            .feature-description {\n                font-size: 0.875rem;\n                color: var(--neutral);\n                line-height: 1.4;\n            }\n\n            .pros-cons {\n                margin-top: 0.75rem;\n                display: flex;\n                flex-direction: column;\n                gap: 0.5rem;\n            }\n\n            .pro, .con {\n                font-size: 0.75rem;\n                padding: 0.25rem 0.5rem;\n                border-radius: 0.25rem;\n            }\n\n            .pro {\n                background: rgba(34, 197, 94, 0.1);\n                color: var(--success);\n            }\n\n            .pro::before {\n                content: '✓ ';\n            }\n\n            .con {\n                background: rgba(239, 68, 68, 0.1);\n                color: #dc2626;\n            }\n\n            .con::before {\n                content: '✗ ';\n            }\n\n            /* Animation Controls */\n            .animation-controls {\n                display: flex;\n                justify-content: center;\n                gap: 1rem;\n                margin-top: 1.5rem;\n            }\n\n            .anim-btn {\n                background: var(--primary);\n                color: white;\n                border: none;\n                padding: 0.5rem 1rem;\n                border-radius: 0.375rem;\n                cursor: pointer;\n                font-size: 0.875rem;\n                transition: all 0.2s ease;\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n            }\n\n            .anim-btn:hover {\n                background: var(--secondary);\n                transform: translateY(-1px);\n            }\n\n            .anim-btn:disabled {\n                background: var(--neutral);\n                cursor: not-allowed;\n                transform: none;\n            }\n\n            /* Responsive Design */\n            @media (max-width: 768px) {\n                .comparison-container {\n                    padding: 1rem;\n                }\n\n                .view-toggles {\n                    flex-direction: column;\n                    align-items: center;\n                }\n\n                .clients-grid {\n                    grid-template-columns: repeat(2, 1fr);\n                }\n\n                .dvcs-architecture {\n                    grid-template-columns: repeat(2, 1fr);\n                    grid-template-rows: repeat(2, 1fr);\n                }\n\n                .feature-comparison {\n                    grid-template-columns: 1fr;\n                }\n\n                .developer-node {\n                    min-width: 100px;\n                    padding: 0.75rem;\n                }\n            }\n\n            @keyframes flow {\n                0% { stroke-dashoffset: 0; }\n                100% { stroke-dashoffset: -10; }\n            }\n\n            @keyframes highlight {\n                0%, 100% { box-shadow: 0 4px 15px rgba(37, 99, 235, 0.3); }\n                50% { box-shadow: 0 8px 25px rgba(37, 99, 235, 0.6); }\n            }\n\n            .node-highlight {\n                animation: highlight 2s ease-in-out infinite;\n            }\n        `\n    ];\n\n    constructor() {\n        super();\n        this.currentView = 'cvcs';\n        this.animationStep = 0;\n        this.isAnimating = false;\n        this.selectedFeature = '';\n        this.features = this.createFeatures();\n    }\n\n    createFeatures() {\n        return {\n            workflow: {\n                cvcs: {\n                    title: 'Flujo de Trabajo Centralizado',\n                    description: 'Los desarrolladores se conectan a un servidor central para todas las operaciones.',\n                    pros: ['Control centralizado', 'Administración simplificada'],\n                    cons: ['Punto único de fallo', 'Requiere conectividad constante']\n                },\n                dvcs: {\n                    title: 'Flujo de Trabajo Distribuido',\n                    description: 'Cada desarrollador tiene una copia completa del repositorio.',\n                    pros: ['Sin punto único de fallo', 'Trabajo offline completo'],\n                    cons: ['Mayor complejidad inicial', 'Más espacio de almacenamiento']\n                }\n            },\n            performance: {\n                cvcs: {\n                    title: 'Rendimiento Dependiente de Red',\n                    description: 'Las operaciones requieren comunicación con el servidor central.',\n                    pros: ['Menos uso de espacio local'],\n                    cons: ['Lento con conexiones pobres', 'Latencia en operaciones básicas']\n                },\n                dvcs: {\n                    title: 'Rendimiento Local Óptimo',\n                    description: 'La mayoría de operaciones son instantáneas y locales.',\n                    pros: ['Operaciones muy rápidas', 'Sin dependencia de red'],\n                    cons: ['Mayor uso de espacio local']\n                }\n            },\n            branching: {\n                cvcs: {\n                    title: 'Ramificación Limitada',\n                    description: 'Crear ramas puede ser lento y complejo.',\n                    pros: ['Ramas centralmente gestionadas'],\n                    cons: ['Ramificación costosa', 'Fusiones complejas']\n                },\n                dvcs: {\n                    title: 'Ramificación Flexible',\n                    description: 'Las ramas son ligeras y se crean instantáneamente.',\n                    pros: ['Ramas muy rápidas', 'Experimentación fácil'],\n                    cons: ['Puede crear muchas ramas']\n                }\n            },\n            collaboration: {\n                cvcs: {\n                    title: 'Colaboración Secuencial',\n                    description: 'Los desarrolladores deben coordinarse para evitar conflictos.',\n                    pros: ['Proceso de fusión controlado'],\n                    cons: ['Bloqueos frecuentes', 'Coordinación manual requerida']\n                },\n                dvcs: {\n                    title: 'Colaboración Paralela',\n                    description: 'Múltiples desarrolladores pueden trabajar independientemente.',\n                    pros: ['Trabajo paralelo total', 'Integración flexible'],\n                    cons: ['Conflictos de fusión más complejos']\n                }\n            }\n        };\n    }\n\n    render() {\n        return html`\n            <div class=\"comparison-container\">\n                <h4 class=\"title\">\n                    ${this.lang === 'es' \n                        ? 'Comparación Interactiva: CVCS vs DVCS'\n                        : 'Interactive Comparison: CVCS vs DVCS'}\n                </h4>\n\n                <!-- View Toggle -->\n                <div class=\"view-toggles\">\n                    <button \n                        class=\"toggle-btn ${this.currentView === 'cvcs' ? 'active' : ''}\"\n                        @click=\"${() => this.setView('cvcs')}\"\n                    >\n                        <i class=\"ph-building-office\"></i>\n                        ${this.lang === 'es' ? 'Centralizado (CVCS)' : 'Centralized (CVCS)'}\n                    </button>\n                    <button \n                        class=\"toggle-btn ${this.currentView === 'dvcs' ? 'active' : ''}\"\n                        @click=\"${() => this.setView('dvcs')}\"\n                    >\n                        <i class=\"ph-network\"></i>\n                        ${this.lang === 'es' ? 'Distribuido (DVCS)' : 'Distributed (DVCS)'}\n                    </button>\n                    <button \n                        class=\"toggle-btn ${this.currentView === 'comparison' ? 'active' : ''}\"\n                        @click=\"${() => this.setView('comparison')}\"\n                    >\n                        <i class=\"ph-scales\"></i>\n                        ${this.lang === 'es' ? 'Comparación' : 'Comparison'}\n                    </button>\n                </div>\n\n                <!-- Architecture Visualization -->\n                <div class=\"architecture-view\">\n                    ${this.currentView === 'cvcs' ? this.renderCVCS() : ''}\n                    ${this.currentView === 'dvcs' ? this.renderDVCS() : ''}\n                    ${this.currentView === 'comparison' ? this.renderComparison() : ''}\n                </div>\n\n                <!-- Animation Controls -->\n                ${this.currentView !== 'comparison' ? html`\n                    <div class=\"animation-controls\">\n                        <button \n                            class=\"anim-btn\"\n                            @click=\"${this.startAnimation}\"\n                            ?disabled=\"${this.isAnimating}\"\n                        >\n                            <i class=\"ph-play\"></i>\n                            ${this.lang === 'es' ? 'Demostrar Flujo' : 'Demonstrate Flow'}\n                        </button>\n                        <button \n                            class=\"anim-btn\"\n                            @click=\"${this.resetAnimation}\"\n                        >\n                            <i class=\"ph-arrow-counter-clockwise\"></i>\n                            ${this.lang === 'es' ? 'Reiniciar' : 'Reset'}\n                        </button>\n                    </div>\n                ` : ''}\n            </div>\n        `;\n    }\n\n    renderCVCS() {\n        return html`\n            <div class=\"cvcs-architecture\">\n                <div class=\"central-server\">\n                    <i class=\"ph-server\" style=\"font-size: 2rem; margin-bottom: 0.5rem;\"></i>\n                    <div style=\"font-weight: 600; margin-bottom: 0.5rem;\">Servidor Central</div>\n                    <div style=\"font-size: 0.875rem;\">Todo el historial del proyecto</div>\n                    <div style=\"font-size: 0.75rem; margin-top: 0.5rem; opacity: 0.9;\">\n                        ⚠️ Punto único de fallo\n                    </div>\n                </div>\n\n                <div class=\"clients-grid\">\n                    ${[1, 2, 3, 4, 5, 6].map(i => html`\n                        <div class=\"client-node limited\">\n                            <i class=\"ph-desktop\" style=\"font-size: 1.5rem; color: var(--primary);\"></i>\n                            <div style=\"font-size: 0.75rem; margin-top: 0.5rem; color: var(--text);\">\n                                Cliente ${i}\n                            </div>\n                            <div style=\"font-size: 0.625rem; color: var(--neutral); margin-top: 0.25rem;\">\n                                Solo copia de trabajo\n                            </div>\n                        </div>\n                    `)}\n                </div>\n\n                <svg class=\"connections\" viewBox=\"0 0 600 400\">\n                    ${[1, 2, 3, 4, 5, 6].map((_, i) => {\n                        const x1 = 300, y1 = 120; // Central server position\n                        const x2 = 100 + (i % 3) * 200, y2 = 280; // Client positions\n                        return html`\n                            <line \n                                class=\"connection-line\" \n                                x1=\"${x1}\" y1=\"${y1}\" \n                                x2=\"${x2}\" y2=\"${y2}\"\n                            />\n                        `;\n                    })}\n                </svg>\n            </div>\n        `;\n    }\n\n    renderDVCS() {\n        return html`\n            <div class=\"dvcs-architecture\">\n                ${[1, 2, 3, 4, 5, 6, 7, 8, 9].map(i => html`\n                    <div class=\"developer-node complete\">\n                        <i class=\"ph-git-branch\" style=\"font-size: 1.5rem; margin-bottom: 0.25rem;\"></i>\n                        <div style=\"font-size: 0.75rem; font-weight: 600;\">Dev ${i}</div>\n                        <div style=\"font-size: 0.625rem; margin-top: 0.25rem; opacity: 0.9;\">\n                            Repo completo\n                        </div>\n                    </div>\n                `)}\n\n                <svg class=\"connections\" viewBox=\"0 0 500 500\">\n                    <!-- Bidirectional connections between nodes -->\n                    ${this.createDVCSConnections().map(conn => html`\n                        <line \n                            class=\"connection-line bidirectional\" \n                            x1=\"${conn.x1}\" y1=\"${conn.y1}\" \n                            x2=\"${conn.x2}\" y2=\"${conn.y2}\"\n                        />\n                    `)}\n                </svg>\n            </div>\n        `;\n    }\n\n    renderComparison() {\n        return html`\n            <div class=\"feature-comparison\">\n                ${Object.entries(this.features).map(([key, feature]) => html`\n                    <div class=\"feature-card cvcs ${this.selectedFeature === key ? 'selected' : ''}\"\n                         @click=\"${() => this.selectFeature(key)}\">\n                        <div class=\"feature-title\">\n                            <i class=\"ph-building-office\"></i>\n                            ${feature.cvcs.title}\n                        </div>\n                        <div class=\"feature-description\">\n                            ${feature.cvcs.description}\n                        </div>\n                        <div class=\"pros-cons\">\n                            ${feature.cvcs.pros.map(pro => html`<div class=\"pro\">${pro}</div>`)}\n                            ${feature.cvcs.cons.map(con => html`<div class=\"con\">${con}</div>`)}\n                        </div>\n                    </div>\n\n                    <div class=\"feature-card dvcs ${this.selectedFeature === key ? 'selected' : ''}\"\n                         @click=\"${() => this.selectFeature(key)}\">\n                        <div class=\"feature-title\">\n                            <i class=\"ph-network\"></i>\n                            ${feature.dvcs.title}\n                        </div>\n                        <div class=\"feature-description\">\n                            ${feature.dvcs.description}\n                        </div>\n                        <div class=\"pros-cons\">\n                            ${feature.dvcs.pros.map(pro => html`<div class=\"pro\">${pro}</div>`)}\n                            ${feature.dvcs.cons.map(con => html`<div class=\"con\">${con}</div>`)}\n                        </div>\n                    </div>\n                `)}\n            </div>\n        `;\n    }\n\n    createDVCSConnections() {\n        const positions = [\n            { x: 80, y: 80 }, { x: 250, y: 80 }, { x: 420, y: 80 },\n            { x: 80, y: 250 }, { x: 250, y: 250 }, { x: 420, y: 250 },\n            { x: 80, y: 420 }, { x: 250, y: 420 }, { x: 420, y: 420 }\n        ];\n\n        const connections = [];\n        for (let i = 0; i < positions.length; i++) {\n            for (let j = i + 1; j < positions.length; j++) {\n                if (Math.random() > 0.7) { // Show some connections\n                    connections.push({\n                        x1: positions[i].x,\n                        y1: positions[i].y,\n                        x2: positions[j].x,\n                        y2: positions[j].y\n                    });\n                }\n            }\n        }\n        return connections;\n    }\n\n    setView(view) {\n        this.currentView = view;\n        this.selectedFeature = '';\n        this.track('comparison_view_changed', { view });\n    }\n\n    selectFeature(feature) {\n        this.selectedFeature = this.selectedFeature === feature ? '' : feature;\n        this.track('feature_comparison', { feature, selected: this.selectedFeature === feature });\n    }\n\n    async startAnimation() {\n        this.isAnimating = true;\n        this.track('architecture_animation_start', { view: this.currentView });\n\n        // Simple animation - highlight nodes in sequence\n        const nodes = this.shadowRoot.querySelectorAll('.client-node, .developer-node');\n        for (let i = 0; i < nodes.length; i++) {\n            nodes[i].classList.add('node-highlight');\n            await new Promise(resolve => setTimeout(resolve, 500));\n            nodes[i].classList.remove('node-highlight');\n        }\n\n        this.isAnimating = false;\n        \n        // Emit completion event\n        this.emit('exercise-completed', {\n            component: 'comparison-tool',\n            view: this.currentView,\n            score: 100\n        });\n    }\n\n    resetAnimation() {\n        this.isAnimating = false;\n        this.animationStep = 0;\n        const nodes = this.shadowRoot.querySelectorAll('.node-highlight');\n        nodes.forEach(node => node.classList.remove('node-highlight'));\n        this.track('architecture_animation_reset');\n    }\n\n    // Accessibility enhancements\n    firstUpdated() {\n        super.firstUpdated();\n        \n        this.setAttribute('role', 'application');\n        this.setAttribute('aria-label', \n            this.lang === 'es' \n                ? 'Herramienta de comparación interactiva entre sistemas centralizados y distribuidos'\n                : 'Interactive comparison tool between centralized and distributed systems'\n        );\n    }\n}\n\n// Register the component\ncustomElements.define('git-comparison-tool', GitComparisonToolComponent);\n\nexport default GitComparisonToolComponent;"],"names":["GitComparisonToolComponent","BaseComponent","html","i","_","x2","conn","key","feature","pro","con","positions","connections","j","view","nodes","resolve","node","__publicField","css"],"mappings":"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"}