{"version":3,"file":"hash-generator-component-_bjNwDFC.js","sources":["../../src/js/components/hash-generator-component.js"],"sourcesContent":["/**\n * SHA-1 Hash Generator Component\n * Interactive demonstration of Git's data integrity through SHA-1 hashing\n */\n\nimport { html, css } from 'lit';\nimport { BaseComponent } from './component-registry.js';\n\nexport class GitHashGeneratorComponent extends BaseComponent {\n    static properties = {\n        inputText: { type: String },\n        generatedHash: { type: String },\n        isGenerating: { type: Boolean },\n        showExplanation: { type: Boolean },\n        demoStep: { type: Number },\n        examples: { type: Array }\n    };\n\n    static styles = [\n        BaseComponent.styles,\n        css`\n            :host {\n                display: block;\n                margin: 1rem 0;\n            }\n\n            .hash-container {\n                background: var(--card-bg);\n                border: 1px solid var(--border-color);\n                border-radius: 0.75rem;\n                padding: 2rem;\n                margin: 1rem 0;\n            }\n\n            .title {\n                font-size: 1.25rem;\n                font-weight: 600;\n                margin-bottom: 1rem;\n                color: var(--text);\n                text-align: center;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 0.5rem;\n            }\n\n            .intro-text {\n                color: var(--neutral);\n                margin-bottom: 1.5rem;\n                text-align: center;\n                line-height: 1.6;\n            }\n\n            .hash-demo {\n                display: grid;\n                gap: 1.5rem;\n                margin-bottom: 2rem;\n            }\n\n            .input-section {\n                background: var(--bg);\n                border-radius: 0.5rem;\n                padding: 1.5rem;\n                border: 1px solid var(--border-color);\n            }\n\n            .input-label {\n                display: block;\n                font-weight: 600;\n                color: var(--text);\n                margin-bottom: 0.5rem;\n            }\n\n            .content-input {\n                width: 100%;\n                min-height: 120px;\n                padding: 1rem;\n                border: 1px solid var(--border-color);\n                border-radius: 0.5rem;\n                background: var(--card-bg);\n                color: var(--text);\n                font-family: var(--font-mono);\n                font-size: 0.875rem;\n                resize: vertical;\n                transition: all 0.2s ease;\n            }\n\n            .content-input:focus {\n                outline: none;\n                border-color: var(--primary);\n                box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);\n            }\n\n            .hash-arrow {\n                text-align: center;\n                color: var(--primary);\n                font-size: 2rem;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 1rem;\n                padding: 1rem 0;\n            }\n\n            .hash-arrow.generating {\n                animation: bounce 1s infinite;\n            }\n\n            .hash-process {\n                background: var(--code-bg);\n                border: 1px solid var(--border-color);\n                border-radius: 0.5rem;\n                padding: 1rem;\n                font-family: var(--font-mono);\n                font-size: 0.875rem;\n                text-align: center;\n            }\n\n            .process-step {\n                padding: 0.5rem 0;\n                border-bottom: 1px solid var(--border-color);\n                color: var(--neutral);\n            }\n\n            .process-step:last-child {\n                border-bottom: none;\n            }\n\n            .process-step.active {\n                color: var(--primary);\n                font-weight: 600;\n            }\n\n            .hash-output {\n                background: var(--bg);\n                border-radius: 0.5rem;\n                padding: 1.5rem;\n                border: 2px solid var(--success);\n                text-align: center;\n            }\n\n            .hash-label {\n                font-weight: 600;\n                color: var(--success);\n                margin-bottom: 1rem;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 0.5rem;\n            }\n\n            .hash-result {\n                background: var(--card-bg);\n                border: 1px solid var(--border-color);\n                border-radius: 0.5rem;\n                padding: 1rem;\n                font-family: var(--font-mono);\n                font-size: 0.875rem;\n                color: var(--accent);\n                word-break: break-all;\n                letter-spacing: 0.5px;\n                position: relative;\n                cursor: pointer;\n                transition: all 0.2s ease;\n            }\n\n            .hash-result:hover {\n                background: var(--bg);\n                border-color: var(--primary);\n            }\n\n            .copy-indicator {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n                background: var(--success);\n                color: white;\n                padding: 0.25rem 0.5rem;\n                border-radius: 0.25rem;\n                font-size: 0.625rem;\n                opacity: 0;\n                transform: translateY(-10px);\n                transition: all 0.3s ease;\n            }\n\n            .copy-indicator.show {\n                opacity: 1;\n                transform: translateY(0);\n            }\n\n            .hash-properties {\n                display: grid;\n                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n                gap: 1rem;\n                margin: 1.5rem 0;\n            }\n\n            .property-card {\n                background: var(--card-bg);\n                border: 1px solid var(--border-color);\n                border-radius: 0.5rem;\n                padding: 1rem;\n                text-align: center;\n                transition: all 0.2s ease;\n            }\n\n            .property-card:hover {\n                border-color: var(--primary);\n                transform: translateY(-2px);\n            }\n\n            .property-icon {\n                font-size: 2rem;\n                margin-bottom: 0.5rem;\n                color: var(--primary);\n            }\n\n            .property-title {\n                font-weight: 600;\n                color: var(--text);\n                margin-bottom: 0.5rem;\n            }\n\n            .property-description {\n                font-size: 0.875rem;\n                color: var(--neutral);\n                line-height: 1.4;\n            }\n\n            .examples-section {\n                margin-top: 2rem;\n                background: var(--bg);\n                border-radius: 0.5rem;\n                padding: 1.5rem;\n                border: 1px solid var(--border-color);\n            }\n\n            .examples-title {\n                font-weight: 600;\n                color: var(--text);\n                margin-bottom: 1rem;\n                text-align: center;\n            }\n\n            .example-grid {\n                display: grid;\n                gap: 1rem;\n            }\n\n            .example-item {\n                background: var(--card-bg);\n                border: 1px solid var(--border-color);\n                border-radius: 0.5rem;\n                padding: 1rem;\n                cursor: pointer;\n                transition: all 0.2s ease;\n            }\n\n            .example-item:hover {\n                border-color: var(--primary);\n                background: rgba(37, 99, 235, 0.05);\n            }\n\n            .example-content {\n                font-family: var(--font-mono);\n                font-size: 0.75rem;\n                color: var(--text);\n                margin-bottom: 0.5rem;\n                background: var(--bg);\n                padding: 0.5rem;\n                border-radius: 0.25rem;\n                border: 1px solid var(--border-color);\n            }\n\n            .example-hash {\n                font-family: var(--font-mono);\n                font-size: 0.625rem;\n                color: var(--accent);\n                word-break: break-all;\n                opacity: 0.8;\n            }\n\n            .controls {\n                display: flex;\n                justify-content: center;\n                gap: 1rem;\n                margin-top: 2rem;\n                flex-wrap: wrap;\n            }\n\n            .control-btn {\n                background: var(--primary);\n                color: white;\n                border: none;\n                padding: 0.75rem 1.5rem;\n                border-radius: 0.5rem;\n                cursor: pointer;\n                font-weight: 500;\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n                transition: all 0.2s ease;\n            }\n\n            .control-btn:hover {\n                background: var(--secondary);\n                transform: translateY(-1px);\n                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n            }\n\n            .control-btn:disabled {\n                background: var(--neutral);\n                cursor: not-allowed;\n                transform: none;\n                box-shadow: none;\n            }\n\n            .control-btn.secondary {\n                background: var(--card-bg);\n                color: var(--text);\n                border: 1px solid var(--border-color);\n            }\n\n            .control-btn.secondary:hover {\n                background: var(--bg);\n                border-color: var(--primary);\n            }\n\n            .explanation-panel {\n                background: linear-gradient(135deg, rgba(37, 99, 235, 0.1), rgba(34, 197, 94, 0.1));\n                border: 1px solid var(--primary);\n                border-radius: 0.5rem;\n                padding: 1.5rem;\n                margin-top: 1.5rem;\n                transition: all 0.3s ease;\n            }\n\n            .explanation-panel.hidden {\n                opacity: 0;\n                transform: translateY(-10px);\n                max-height: 0;\n                padding: 0 1.5rem;\n                overflow: hidden;\n            }\n\n            .explanation-title {\n                font-weight: 600;\n                color: var(--text);\n                margin-bottom: 1rem;\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n            }\n\n            .explanation-content {\n                color: var(--neutral);\n                line-height: 1.6;\n            }\n\n            .explanation-content ul {\n                margin: 1rem 0;\n                padding-left: 1.5rem;\n            }\n\n            .explanation-content li {\n                margin: 0.5rem 0;\n            }\n\n            @keyframes bounce {\n                0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n                40% { transform: translateY(-10px); }\n                60% { transform: translateY(-5px); }\n            }\n\n            /* Responsive Design */\n            @media (max-width: 768px) {\n                .hash-container {\n                    padding: 1rem;\n                }\n\n                .hash-properties {\n                    grid-template-columns: 1fr;\n                }\n\n                .controls {\n                    gap: 0.5rem;\n                }\n\n                .control-btn {\n                    padding: 0.5rem 1rem;\n                    font-size: 0.875rem;\n                }\n\n                .hash-result {\n                    font-size: 0.75rem;\n                }\n            }\n        `\n    ];\n\n    constructor() {\n        super();\n        this.inputText = 'Hello, Git World!';\n        this.generatedHash = '';\n        this.isGenerating = false;\n        this.showExplanation = false;\n        this.demoStep = 0;\n        this.examples = [\n            {\n                content: 'Initial commit',\n                hash: 'a1b2c3d4e5f6789012345678901234567890abcd'\n            },\n            {\n                content: 'Add user authentication',\n                hash: '9876543210fedcba0987654321098765432109876'\n            },\n            {\n                content: 'Fix login bug',\n                hash: 'abcdef1234567890abcdef1234567890abcdef12'\n            }\n        ];\n    }\n\n    render() {\n        return html`\n            <div class=\"hash-container\">\n                <h4 class=\"title\">\n                    <i class=\"ph-fingerprint-duotone\"></i>\n                    ${this.lang === 'es' \n                        ? 'Generador de Hash SHA-1: Integridad de Datos'\n                        : 'SHA-1 Hash Generator: Data Integrity'}\n                </h4>\n\n                <p class=\"intro-text\">\n                    ${this.lang === 'es'\n                        ? 'Git utiliza SHA-1 para garantizar la integridad de cada archivo y commit. Prueba cómo cualquier cambio, por pequeño que sea, genera un hash completamente diferente.'\n                        : 'Git uses SHA-1 to ensure the integrity of every file and commit. Try how any change, however small, generates a completely different hash.'}\n                </p>\n\n                <!-- Hash Demo -->\n                <div class=\"hash-demo\">\n                    <!-- Input Section -->\n                    <div class=\"input-section\">\n                        <label class=\"input-label\" for=\"content-input\">\n                            <i class=\"ph-file-text mr-2\"></i>\n                            ${this.lang === 'es' ? 'Contenido del Archivo:' : 'File Content:'}\n                        </label>\n                        <textarea\n                            id=\"content-input\"\n                            class=\"content-input\"\n                            .value=\"${this.inputText}\"\n                            @input=\"${this.handleInput}\"\n                            placeholder=\"${this.lang === 'es' ? 'Escribe cualquier contenido aquí...' : 'Write any content here...'}\"\n                        ></textarea>\n                    </div>\n\n                    <!-- Hash Process Arrow -->\n                    <div class=\"hash-arrow ${this.isGenerating ? 'generating' : ''}\">\n                        <i class=\"ph-arrow-down\"></i>\n                        <span style=\"font-size: 1rem; color: var(--text);\">SHA-1</span>\n                        <i class=\"ph-arrow-down\"></i>\n                    </div>\n\n                    <!-- Hash Process Steps -->\n                    <div class=\"hash-process\">\n                        <div class=\"process-step ${this.demoStep >= 1 ? 'active' : ''}\">\n                            1. ${this.lang === 'es' ? 'Contenido → Bytes' : 'Content → Bytes'}\n                        </div>\n                        <div class=\"process-step ${this.demoStep >= 2 ? 'active' : ''}\">\n                            2. ${this.lang === 'es' ? 'Algoritmo SHA-1' : 'SHA-1 Algorithm'}\n                        </div>\n                        <div class=\"process-step ${this.demoStep >= 3 ? 'active' : ''}\">\n                            3. ${this.lang === 'es' ? 'Hash de 40 caracteres' : '40-character Hash'}\n                        </div>\n                    </div>\n\n                    <!-- Hash Output -->\n                    ${this.generatedHash ? html`\n                        <div class=\"hash-output\">\n                            <div class=\"hash-label\">\n                                <i class=\"ph-check-circle\"></i>\n                                ${this.lang === 'es' ? 'Hash SHA-1 Generado:' : 'Generated SHA-1 Hash:'}\n                            </div>\n                            <div class=\"hash-result\" @click=\"${this.copyHash}\">\n                                ${this.generatedHash}\n                                <div class=\"copy-indicator\" id=\"copy-indicator\">\n                                    ${this.lang === 'es' ? '¡Copiado!' : 'Copied!'}\n                                </div>\n                            </div>\n                        </div>\n                    ` : ''}\n                </div>\n\n                <!-- Hash Properties -->\n                <div class=\"hash-properties\">\n                    <div class=\"property-card\">\n                        <div class=\"property-icon\">\n                            <i class=\"ph-shield-check\"></i>\n                        </div>\n                        <div class=\"property-title\">\n                            ${this.lang === 'es' ? 'Único' : 'Unique'}\n                        </div>\n                        <div class=\"property-description\">\n                            ${this.lang === 'es' \n                                ? 'Cada contenido único produce un hash único'\n                                : 'Each unique content produces a unique hash'}\n                        </div>\n                    </div>\n\n                    <div class=\"property-card\">\n                        <div class=\"property-icon\">\n                            <i class=\"ph-lightning\"></i>\n                        </div>\n                        <div class=\"property-title\">\n                            ${this.lang === 'es' ? 'Rápido' : 'Fast'}\n                        </div>\n                        <div class=\"property-description\">\n                            ${this.lang === 'es' \n                                ? 'Generación instantánea del hash'\n                                : 'Instant hash generation'}\n                        </div>\n                    </div>\n\n                    <div class=\"property-card\">\n                        <div class=\"property-icon\">\n                            <i class=\"ph-arrows-clockwise\"></i>\n                        </div>\n                        <div class=\"property-title\">\n                            ${this.lang === 'es' ? 'Determinístico' : 'Deterministic'}\n                        </div>\n                        <div class=\"property-description\">\n                            ${this.lang === 'es' \n                                ? 'El mismo contenido siempre produce el mismo hash'\n                                : 'Same content always produces the same hash'}\n                        </div>\n                    </div>\n\n                    <div class=\"property-card\">\n                        <div class=\"property-icon\">\n                            <i class=\"ph-warning\"></i>\n                        </div>\n                        <div class=\"property-title\">\n                            ${this.lang === 'es' ? 'Sensible' : 'Sensitive'}\n                        </div>\n                        <div class=\"property-description\">\n                            ${this.lang === 'es' \n                                ? 'Cualquier cambio mínimo altera completamente el hash'\n                                : 'Any minimal change completely alters the hash'}\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Examples -->\n                <div class=\"examples-section\">\n                    <div class=\"examples-title\">\n                        ${this.lang === 'es' ? 'Ejemplos de Commits de Git:' : 'Git Commit Examples:'}\n                    </div>\n                    <div class=\"example-grid\">\n                        ${this.examples.map(example => html`\n                            <div class=\"example-item\" @click=\"${() => this.loadExample(example.content)}\">\n                                <div class=\"example-content\">${example.content}</div>\n                                <div class=\"example-hash\">${example.hash}</div>\n                            </div>\n                        `)}\n                    </div>\n                </div>\n\n                <!-- Controls -->\n                <div class=\"controls\">\n                    <button class=\"control-btn\" @click=\"${this.generateHash}\" ?disabled=\"${this.isGenerating}\">\n                        <i class=\"ph-gear\"></i>\n                        ${this.lang === 'es' ? 'Generar Hash' : 'Generate Hash'}\n                    </button>\n\n                    <button class=\"control-btn secondary\" @click=\"${this.clearInput}\">\n                        <i class=\"ph-eraser\"></i>\n                        ${this.lang === 'es' ? 'Limpiar' : 'Clear'}\n                    </button>\n\n                    <button class=\"control-btn secondary\" @click=\"${this.toggleExplanation}\">\n                        <i class=\"ph-question\"></i>\n                        ${this.lang === 'es' ? 'Explicación' : 'Explanation'}\n                    </button>\n                </div>\n\n                <!-- Explanation Panel -->\n                <div class=\"explanation-panel ${!this.showExplanation ? 'hidden' : ''}\">\n                    <div class=\"explanation-title\">\n                        <i class=\"ph-info\"></i>\n                        ${this.lang === 'es' ? '¿Cómo funciona SHA-1 en Git?' : 'How does SHA-1 work in Git?'}\n                    </div>\n                    <div class=\"explanation-content\">\n                        ${this.lang === 'es' ? html`\n                            <p>Git utiliza SHA-1 como su función de hash criptográfica para:</p>\n                            <ul>\n                                <li><strong>Identificar objetos:</strong> Cada archivo, directorio y commit tiene un hash único</li>\n                                <li><strong>Verificar integridad:</strong> Cualquier corrupción se detecta inmediatamente</li>\n                                <li><strong>Prevenir alteraciones:</strong> Imposible modificar contenido sin cambiar el hash</li>\n                                <li><strong>Optimizar storage:</strong> Archivos idénticos se almacenan una sola vez</li>\n                            </ul>\n                            <p>El hash SHA-1 de 40 caracteres hexadecimales es la \"huella digital\" de cada objeto en Git.</p>\n                        ` : html`\n                            <p>Git uses SHA-1 as its cryptographic hash function to:</p>\n                            <ul>\n                                <li><strong>Identify objects:</strong> Each file, directory, and commit has a unique hash</li>\n                                <li><strong>Verify integrity:</strong> Any corruption is detected immediately</li>\n                                <li><strong>Prevent tampering:</strong> Impossible to modify content without changing the hash</li>\n                                <li><strong>Optimize storage:</strong> Identical files are stored only once</li>\n                            </ul>\n                            <p>The 40-character hexadecimal SHA-1 hash is the \"fingerprint\" of each object in Git.</p>\n                        `}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n\n    handleInput(e) {\n        this.inputText = e.target.value;\n        this.generatedHash = '';\n        this.demoStep = 0;\n    }\n\n    async generateHash() {\n        if (!this.inputText.trim()) return;\n\n        this.isGenerating = true;\n        this.demoStep = 0;\n        this.generatedHash = '';\n\n        // Simulate hash generation steps\n        for (let step = 1; step <= 3; step++) {\n            await new Promise(resolve => setTimeout(resolve, 500));\n            this.demoStep = step;\n            this.requestUpdate();\n        }\n\n        // Generate a mock SHA-1 hash (in real implementation, you'd use actual SHA-1)\n        this.generatedHash = this.mockSHA1(this.inputText);\n        this.isGenerating = false;\n\n        this.track('hash_generated', { \n            contentLength: this.inputText.length,\n            hash: this.generatedHash.substring(0, 8) + '...'\n        });\n\n        // Emit completion event\n        this.emit('exercise-completed', {\n            component: 'hash-generator',\n            action: 'generate',\n            score: 100\n        });\n    }\n\n    mockSHA1(input) {\n        // Simple mock SHA-1 generator for demonstration\n        let hash = '';\n        let chars = '0123456789abcdef';\n        \n        // Create a pseudo-random but consistent hash based on input\n        let seed = 0;\n        for (let i = 0; i < input.length; i++) {\n            seed += input.charCodeAt(i) * (i + 1);\n        }\n\n        for (let i = 0; i < 40; i++) {\n            hash += chars[Math.floor((seed * (i + 1)) % 16)];\n            seed = (seed * 16807) % 2147483647; // Linear congruential generator\n        }\n\n        return hash;\n    }\n\n    loadExample(content) {\n        this.inputText = content;\n        this.generateHash();\n        this.track('example_loaded', { content: content.substring(0, 20) + '...' });\n    }\n\n    clearInput() {\n        this.inputText = '';\n        this.generatedHash = '';\n        this.demoStep = 0;\n        this.track('input_cleared');\n    }\n\n    toggleExplanation() {\n        this.showExplanation = !this.showExplanation;\n        this.track('explanation_toggled', { shown: this.showExplanation });\n    }\n\n    copyHash() {\n        if (this.generatedHash && navigator.clipboard) {\n            navigator.clipboard.writeText(this.generatedHash).then(() => {\n                const indicator = this.shadowRoot.getElementById('copy-indicator');\n                if (indicator) {\n                    indicator.classList.add('show');\n                    setTimeout(() => {\n                        indicator.classList.remove('show');\n                    }, 2000);\n                }\n                this.track('hash_copied');\n            });\n        }\n    }\n\n    // Accessibility enhancements\n    firstUpdated() {\n        super.firstUpdated();\n        \n        // Generate initial hash\n        this.generateHash();\n        \n        this.setAttribute('role', 'application');\n        this.setAttribute('aria-label', \n            this.lang === 'es' \n                ? 'Generador de hash SHA-1 para demostrar la integridad de datos de Git'\n                : 'SHA-1 hash generator to demonstrate Git data integrity'\n        );\n    }\n}\n\n// Register the component\ncustomElements.define('git-hash-generator', GitHashGeneratorComponent);\n\nexport default GitHashGeneratorComponent;"],"names":["GitHashGeneratorComponent","BaseComponent","html","example","step","resolve","input","hash","chars","seed","i","content","indicator","__publicField","css"],"mappings":"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"}