{"version":3,"file":"cicd-pipeline-visualizer-CksjHSUx.js","sources":["../../src/js/components/cicd-pipeline-visualizer.js"],"sourcesContent":["/**\n * Interactive CI/CD Pipeline Visualizer Component\n * Demonstrates continuous integration and deployment concepts with GitHub Actions\n */\nimport { LitElement, html, css } from 'lit';\n\nexport class CicdPipelineVisualizer extends LitElement {\n    static properties = {\n        currentPipeline: { type: String },\n        isRunning: { type: Boolean },\n        currentStep: { type: Number },\n        pipelineHistory: { type: Array },\n        selectedExampleType: { type: String },\n        showYamlCode: { type: Boolean },\n        animationSpeed: { type: Number }\n    };\n\n    constructor() {\n        super();\n        this.currentPipeline = 'basic';\n        this.isRunning = false;\n        this.currentStep = 0;\n        this.pipelineHistory = [];\n        this.selectedExampleType = 'nodejs';\n        this.showYamlCode = false;\n        this.animationSpeed = 1500;\n\n        this.pipelines = {\n            basic: {\n                name: 'Pipeline Básico',\n                description: 'Workflow simple de CI con testing y build',\n                trigger: 'Push a main branch',\n                steps: [\n                    { \n                        name: 'Checkout Code', \n                        description: 'Descarga el código del repositorio',\n                        icon: 'ph-download-simple',\n                        duration: 10,\n                        commands: ['git checkout ${{ github.sha }}']\n                    },\n                    { \n                        name: 'Setup Environment', \n                        description: 'Configura el entorno de ejecución',\n                        icon: 'ph-gear',\n                        duration: 30,\n                        commands: ['setup-node@v3', 'npm install']\n                    },\n                    { \n                        name: 'Run Tests', \n                        description: 'Ejecuta las pruebas automatizadas',\n                        icon: 'ph-test-tube',\n                        duration: 45,\n                        commands: ['npm test', 'npm run coverage']\n                    },\n                    { \n                        name: 'Build Application', \n                        description: 'Construye la aplicación para producción',\n                        icon: 'ph-package',\n                        duration: 60,\n                        commands: ['npm run build', 'npm run optimize']\n                    },\n                    { \n                        name: 'Upload Artifacts', \n                        description: 'Guarda los archivos generados',\n                        icon: 'ph-upload-simple',\n                        duration: 15,\n                        commands: ['upload-artifact@v3']\n                    }\n                ]\n            },\n            advanced: {\n                name: 'Pipeline Avanzado',\n                description: 'CI/CD completo con múltiples entornos',\n                trigger: 'Push a cualquier branch',\n                steps: [\n                    { \n                        name: 'Checkout & Setup', \n                        description: 'Prepara el entorno de trabajo',\n                        icon: 'ph-download-simple',\n                        duration: 20,\n                        commands: ['checkout@v3', 'setup-node@v3', 'npm ci']\n                    },\n                    { \n                        name: 'Code Quality', \n                        description: 'Analiza la calidad del código',\n                        icon: 'ph-magnifying-glass',\n                        duration: 30,\n                        commands: ['npm run lint', 'npm run format-check', 'sonarcloud-scan']\n                    },\n                    { \n                        name: 'Unit Tests', \n                        description: 'Ejecuta pruebas unitarias',\n                        icon: 'ph-test-tube',\n                        duration: 45,\n                        commands: ['npm test -- --coverage', 'codecov upload']\n                    },\n                    { \n                        name: 'Integration Tests', \n                        description: 'Pruebas de integración',\n                        icon: 'ph-link',\n                        duration: 90,\n                        commands: ['docker-compose up -d', 'npm run test:integration']\n                    },\n                    { \n                        name: 'Security Scan', \n                        description: 'Escaneo de vulnerabilidades',\n                        icon: 'ph-shield-check',\n                        duration: 60,\n                        commands: ['npm audit', 'snyk test', 'codeql-analysis']\n                    },\n                    { \n                        name: 'Build & Package', \n                        description: 'Construye y empaqueta la aplicación',\n                        icon: 'ph-package',\n                        duration: 120,\n                        commands: ['npm run build', 'docker build', 'docker push']\n                    },\n                    { \n                        name: 'Deploy to Staging', \n                        description: 'Despliega al entorno de pruebas',\n                        icon: 'ph-cloud-arrow-up',\n                        duration: 180,\n                        commands: ['kubectl apply -f k8s/', 'wait-for-deployment']\n                    },\n                    { \n                        name: 'E2E Tests', \n                        description: 'Pruebas end-to-end en staging',\n                        icon: 'ph-monitor-play',\n                        duration: 300,\n                        commands: ['cypress run --env=staging', 'lighthouse-ci']\n                    },\n                    { \n                        name: 'Deploy to Production', \n                        description: 'Despliega a producción (solo main)',\n                        icon: 'ph-rocket',\n                        duration: 240,\n                        commands: ['kubectl apply -f k8s/prod/', 'health-check']\n                    }\n                ]\n            },\n            deployment: {\n                name: 'Pipeline de Despliegue',\n                description: 'Enfocado en estrategias de deployment',\n                trigger: 'Release tag creation',\n                steps: [\n                    { \n                        name: 'Validate Release', \n                        description: 'Valida la versión del release',\n                        icon: 'ph-check-circle',\n                        duration: 10,\n                        commands: ['validate-semver', 'check-changelog']\n                    },\n                    { \n                        name: 'Build Multi-Platform', \n                        description: 'Construye para múltiples plataformas',\n                        icon: 'ph-devices',\n                        duration: 180,\n                        commands: ['docker buildx', 'build --platform linux/amd64,linux/arm64']\n                    },\n                    { \n                        name: 'Blue-Green Deployment', \n                        description: 'Despliega usando estrategia blue-green',\n                        icon: 'ph-arrows-clockwise',\n                        duration: 120,\n                        commands: ['deploy-blue-environment', 'health-check', 'switch-traffic']\n                    },\n                    { \n                        name: 'Canary Release', \n                        description: 'Libera gradualmente a los usuarios',\n                        icon: 'ph-trend-up',\n                        duration: 300,\n                        commands: ['deploy-canary 10%', 'monitor-metrics', 'gradual-rollout']\n                    },\n                    { \n                        name: 'Monitor & Rollback', \n                        description: 'Monitorea y prepara rollback si es necesario',\n                        icon: 'ph-chart-line-up',\n                        duration: 600,\n                        commands: ['setup-monitoring', 'alert-on-errors', 'auto-rollback-if-needed']\n                    }\n                ]\n            }\n        };\n\n        this.yamlExamples = {\n            nodejs: {\n                name: 'Node.js Application',\n                content: `name: CI/CD Pipeline\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    \n    strategy:\n      matrix:\n        node-version: [16.x, 18.x, 20.x]\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Setup Node.js \\${{ matrix.node-version }}\n      uses: actions/setup-node@v3\n      with:\n        node-version: \\${{ matrix.node-version }}\n        cache: 'npm'\n    \n    - name: Install dependencies\n      run: npm ci\n    \n    - name: Run tests\n      run: npm test\n    \n    - name: Upload coverage\n      uses: codecov/codecov-action@v3\n\n  build-and-deploy:\n    needs: test\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/main'\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Setup Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '18.x'\n        cache: 'npm'\n    \n    - name: Install dependencies\n      run: npm ci\n    \n    - name: Build application\n      run: npm run build\n    \n    - name: Deploy to production\n      run: npm run deploy\n      env:\n        DEPLOY_TOKEN: \\${{ secrets.DEPLOY_TOKEN }}`\n            },\n            python: {\n                name: 'Python Application',\n                content: `name: Python CI/CD\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    \n    strategy:\n      matrix:\n        python-version: [3.8, 3.9, 3.10, 3.11]\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Set up Python \\${{ matrix.python-version }}\n      uses: actions/setup-python@v4\n      with:\n        python-version: \\${{ matrix.python-version }}\n    \n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install flake8 pytest pytest-cov\n        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi\n    \n    - name: Lint with flake8\n      run: |\n        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics\n        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics\n    \n    - name: Test with pytest\n      run: |\n        pytest --cov=./ --cov-report=xml\n    \n    - name: Upload coverage to Codecov\n      uses: codecov/codecov-action@v3\n\n  deploy:\n    needs: test\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/main'\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Deploy to Heroku\n      uses: akhileshns/heroku-deploy@v3.12.12\n      with:\n        heroku_api_key: \\${{secrets.HEROKU_API_KEY}}\n        heroku_app_name: \"your-app-name\"\n        heroku_email: \"your-email@example.com\"`\n            },\n            docker: {\n                name: 'Docker Application',\n                content: `name: Docker CI/CD\n\non:\n  push:\n    branches: [ main ]\n    tags: [ 'v*' ]\n  pull_request:\n    branches: [ main ]\n\nenv:\n  REGISTRY: ghcr.io\n  IMAGE_NAME: \\${{ github.repository }}\n\njobs:\n  build-and-push:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: read\n      packages: write\n    \n    steps:\n    - name: Checkout repository\n      uses: actions/checkout@v3\n    \n    - name: Set up Docker Buildx\n      uses: docker/setup-buildx-action@v2\n    \n    - name: Log in to Container Registry\n      uses: docker/login-action@v2\n      with:\n        registry: \\${{ env.REGISTRY }}\n        username: \\${{ github.actor }}\n        password: \\${{ secrets.GITHUB_TOKEN }}\n    \n    - name: Extract metadata\n      id: meta\n      uses: docker/metadata-action@v4\n      with:\n        images: \\${{ env.REGISTRY }}/\\${{ env.IMAGE_NAME }}\n        tags: |\n          type=ref,event=branch\n          type=ref,event=pr\n          type=semver,pattern=version\n          type=semver,pattern=major.minor\n    \n    - name: Build and push Docker image\n      uses: docker/build-push-action@v4\n      with:\n        context: .\n        platforms: linux/amd64,linux/arm64\n        push: true\n        tags: \\${{ steps.meta.outputs.tags }}\n        labels: \\${{ steps.meta.outputs.labels }}\n        cache-from: type=gha\n        cache-to: type=gha,mode=max\n\n  deploy:\n    needs: build-and-push\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/main'\n    \n    steps:\n    - name: Deploy to Kubernetes\n      run: |\n        echo \"Deploying to Kubernetes cluster...\"\n        # kubectl apply -f k8s/`\n            }\n        };\n    }\n\n    static styles = css`\n        :host {\n            display: block;\n        }\n\n        .pipeline-container {\n            background: var(--bg);\n            border: 1px solid var(--border-color);\n            border-radius: var(--radius-lg);\n            padding: var(--space-lg);\n        }\n\n        .pipeline-controls {\n            display: flex;\n            gap: var(--space-md);\n            margin-bottom: var(--space-xl);\n            flex-wrap: wrap;\n            align-items: center;\n        }\n\n        .control-group {\n            display: flex;\n            flex-direction: column;\n            gap: var(--space-xs);\n        }\n\n        .control-group label {\n            font-size: var(--text-sm);\n            color: var(--text-secondary);\n            font-weight: 500;\n        }\n\n        .pipeline-selector {\n            display: flex;\n            background: var(--card-bg);\n            border: 1px solid var(--border-color);\n            border-radius: var(--radius-sm);\n            overflow: hidden;\n        }\n\n        .pipeline-btn {\n            background: none;\n            border: none;\n            padding: var(--space-sm) var(--space-md);\n            cursor: pointer;\n            font-size: var(--text-sm);\n            color: var(--text-secondary);\n            transition: all 0.2s ease;\n            white-space: nowrap;\n        }\n\n        .pipeline-btn:hover {\n            color: var(--text);\n            background: var(--bg);\n        }\n\n        .pipeline-btn.active {\n            background: var(--primary);\n            color: white;\n        }\n\n        .action-buttons {\n            display: flex;\n            gap: var(--space-sm);\n        }\n\n        .btn {\n            background: var(--primary);\n            color: white;\n            border: none;\n            padding: var(--space-sm) var(--space-md);\n            border-radius: var(--radius-sm);\n            cursor: pointer;\n            font-size: var(--text-sm);\n            transition: background 0.2s ease;\n            display: flex;\n            align-items: center;\n            gap: var(--space-xs);\n        }\n\n        .btn:hover:not(:disabled) {\n            background: var(--primary-dark);\n        }\n\n        .btn:disabled {\n            background: var(--border-color);\n            cursor: not-allowed;\n        }\n\n        .btn.secondary {\n            background: var(--secondary);\n        }\n\n        .btn.secondary:hover:not(:disabled) {\n            background: var(--secondary-dark);\n        }\n\n        .speed-control {\n            display: flex;\n            align-items: center;\n            gap: var(--space-sm);\n        }\n\n        .speed-slider {\n            width: 100px;\n        }\n\n        .pipeline-info {\n            background: var(--card-bg);\n            border: 1px solid var(--border-color);\n            border-radius: var(--radius-lg);\n            padding: var(--space-lg);\n            margin-bottom: var(--space-xl);\n        }\n\n        .pipeline-title {\n            font-size: 1.5rem;\n            font-weight: 700;\n            color: var(--text);\n            margin: 0 0 var(--space-sm) 0;\n        }\n\n        .pipeline-description {\n            color: var(--text-secondary);\n            margin-bottom: var(--space-md);\n            line-height: 1.6;\n        }\n\n        .pipeline-trigger {\n            background: var(--bg);\n            border: 1px solid var(--border-color);\n            border-radius: var(--radius-sm);\n            padding: var(--space-sm) var(--space-md);\n            font-family: var(--font-mono);\n            font-size: var(--text-sm);\n            color: var(--text);\n        }\n\n        .pipeline-trigger::before {\n            content: '🚀 Trigger: ';\n            color: var(--text-secondary);\n            font-family: var(--font-sans);\n        }\n\n        .pipeline-visualization {\n            background: var(--card-bg);\n            border: 1px solid var(--border-color);\n            border-radius: var(--radius-lg);\n            padding: var(--space-xl);\n            margin-bottom: var(--space-xl);\n        }\n\n        .pipeline-steps {\n            display: flex;\n            flex-direction: column;\n            gap: var(--space-lg);\n        }\n\n        .pipeline-step {\n            display: flex;\n            align-items: center;\n            gap: var(--space-lg);\n            padding: var(--space-lg);\n            background: var(--bg);\n            border: 2px solid var(--border-color);\n            border-radius: var(--radius-lg);\n            transition: all 0.3s ease;\n            position: relative;\n        }\n\n        .pipeline-step.running {\n            border-color: var(--primary);\n            background: rgba(37, 99, 235, 0.05);\n            animation: pulse 2s infinite;\n        }\n\n        .pipeline-step.completed {\n            border-color: var(--success);\n            background: rgba(34, 197, 94, 0.05);\n        }\n\n        .pipeline-step.failed {\n            border-color: #ef4444;\n            background: rgba(239, 68, 68, 0.05);\n        }\n\n        @keyframes pulse {\n            0% { box-shadow: 0 0 0 0 rgba(37, 99, 235, 0.4); }\n            70% { box-shadow: 0 0 0 10px rgba(37, 99, 235, 0); }\n            100% { box-shadow: 0 0 0 0 rgba(37, 99, 235, 0); }\n        }\n\n        .step-icon {\n            width: 48px;\n            height: 48px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 1.5rem;\n            background: var(--card-bg);\n            border: 2px solid var(--border-color);\n            color: var(--text-secondary);\n            transition: all 0.3s ease;\n            flex-shrink: 0;\n        }\n\n        .pipeline-step.running .step-icon {\n            background: var(--primary);\n            color: white;\n            border-color: var(--primary);\n        }\n\n        .pipeline-step.completed .step-icon {\n            background: var(--success);\n            color: white;\n            border-color: var(--success);\n        }\n\n        .pipeline-step.failed .step-icon {\n            background: #ef4444;\n            color: white;\n            border-color: #ef4444;\n        }\n\n        .step-content {\n            flex: 1;\n        }\n\n        .step-name {\n            font-size: 1.2rem;\n            font-weight: 600;\n            color: var(--text);\n            margin: 0 0 var(--space-xs) 0;\n        }\n\n        .step-description {\n            color: var(--text-secondary);\n            margin-bottom: var(--space-sm);\n            line-height: 1.5;\n        }\n\n        .step-commands {\n            display: flex;\n            flex-wrap: wrap;\n            gap: var(--space-xs);\n        }\n\n        .step-command {\n            background: var(--code-bg);\n            color: var(--code-text);\n            padding: var(--space-xs) var(--space-sm);\n            border-radius: var(--radius-xs);\n            font-family: var(--font-mono);\n            font-size: var(--text-xs);\n            border: 1px solid var(--border-color);\n        }\n\n        .step-duration {\n            color: var(--text-secondary);\n            font-size: var(--text-sm);\n            font-family: var(--font-mono);\n            display: flex;\n            align-items: center;\n            gap: var(--space-xs);\n        }\n\n        .step-progress {\n            position: absolute;\n            bottom: 0;\n            left: 0;\n            height: 3px;\n            background: var(--primary);\n            transition: width 0.3s ease;\n            border-radius: 0 0 var(--radius-lg) var(--radius-lg);\n        }\n\n        .yaml-section {\n            background: var(--card-bg);\n            border: 1px solid var(--border-color);\n            border-radius: var(--radius-lg);\n            padding: var(--space-lg);\n            margin-top: var(--space-xl);\n        }\n\n        .yaml-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: var(--space-lg);\n        }\n\n        .yaml-title {\n            font-size: 1.2rem;\n            font-weight: 600;\n            color: var(--text);\n        }\n\n        .example-selector select {\n            background: var(--bg);\n            border: 1px solid var(--border-color);\n            border-radius: var(--radius-sm);\n            padding: var(--space-sm) var(--space-md);\n            color: var(--text);\n            font-size: var(--text-sm);\n        }\n\n        .yaml-code {\n            background: var(--code-bg);\n            border: 1px solid var(--border-color);\n            border-radius: var(--radius-sm);\n            padding: var(--space-lg);\n            overflow-x: auto;\n            font-family: var(--font-mono);\n            font-size: var(--text-sm);\n            line-height: 1.6;\n            color: var(--code-text);\n            white-space: pre;\n        }\n\n        .pipeline-stats {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n            gap: var(--space-md);\n            margin-bottom: var(--space-xl);\n        }\n\n        .stat-card {\n            background: var(--card-bg);\n            border: 1px solid var(--border-color);\n            border-radius: var(--radius-lg);\n            padding: var(--space-md);\n            text-align: center;\n        }\n\n        .stat-value {\n            font-size: 1.5rem;\n            font-weight: 700;\n            color: var(--primary);\n            margin-bottom: var(--space-xs);\n        }\n\n        .stat-label {\n            font-size: var(--text-sm);\n            color: var(--text-secondary);\n        }\n\n        @media (max-width: 768px) {\n            .pipeline-controls {\n                flex-direction: column;\n                align-items: stretch;\n            }\n            \n            .pipeline-selector {\n                flex-direction: column;\n            }\n            \n            .pipeline-step {\n                flex-direction: column;\n                text-align: center;\n                gap: var(--space-md);\n            }\n            \n            .step-commands {\n                justify-content: center;\n            }\n            \n            .yaml-header {\n                flex-direction: column;\n                gap: var(--space-md);\n                align-items: stretch;\n            }\n        }\n    `;\n\n    setPipeline(pipelineKey) {\n        this.currentPipeline = pipelineKey;\n        this.currentStep = 0;\n        this.isRunning = false;\n        this.requestUpdate();\n    }\n\n    async runPipeline() {\n        if (this.isRunning) return;\n        \n        this.isRunning = true;\n        this.currentStep = 0;\n        const pipeline = this.pipelines[this.currentPipeline];\n        \n        const startTime = Date.now();\n        \n        for (let i = 0; i < pipeline.steps.length; i++) {\n            this.currentStep = i;\n            this.requestUpdate();\n            \n            // Simulate step execution time\n            const stepDuration = (pipeline.steps[i].duration / 60) * this.animationSpeed;\n            await this.delay(stepDuration);\n        }\n        \n        // Mark as completed\n        this.currentStep = pipeline.steps.length;\n        this.isRunning = false;\n        \n        // Add to history\n        const endTime = Date.now();\n        this.pipelineHistory.unshift({\n            pipeline: this.currentPipeline,\n            timestamp: new Date(),\n            duration: Math.round((endTime - startTime) / 1000),\n            status: 'success'\n        });\n        \n        // Keep only last 5 runs\n        if (this.pipelineHistory.length > 5) {\n            this.pipelineHistory = this.pipelineHistory.slice(0, 5);\n        }\n        \n        this.requestUpdate();\n    }\n\n    stopPipeline() {\n        this.isRunning = false;\n        this.requestUpdate();\n    }\n\n    resetPipeline() {\n        this.isRunning = false;\n        this.currentStep = 0;\n        this.requestUpdate();\n    }\n\n    toggleYamlCode() {\n        this.showYamlCode = !this.showYamlCode;\n        this.requestUpdate();\n    }\n\n    setExampleType(type) {\n        this.selectedExampleType = type;\n        this.requestUpdate();\n    }\n\n    setAnimationSpeed(event) {\n        this.animationSpeed = parseInt(event.target.value);\n    }\n\n    delay(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    getStepStatus(stepIndex) {\n        if (!this.isRunning && this.currentStep === 0) return 'pending';\n        if (stepIndex < this.currentStep) return 'completed';\n        if (stepIndex === this.currentStep && this.isRunning) return 'running';\n        if (stepIndex === this.currentStep && !this.isRunning && this.currentStep > 0) return 'completed';\n        return 'pending';\n    }\n\n    getTotalDuration() {\n        const pipeline = this.pipelines[this.currentPipeline];\n        return pipeline.steps.reduce((total, step) => total + step.duration, 0);\n    }\n\n    getCompletedSteps() {\n        return this.isRunning ? this.currentStep : (this.currentStep > 0 ? this.pipelines[this.currentPipeline].steps.length : 0);\n    }\n\n    render() {\n        const pipeline = this.pipelines[this.currentPipeline];\n        const totalSteps = pipeline.steps.length;\n        const completedSteps = this.getCompletedSteps();\n        const totalDuration = this.getTotalDuration();\n\n        return html`\n            <div class=\"pipeline-container\">\n                <div class=\"pipeline-controls\">\n                    <div class=\"control-group\">\n                        <label>Tipo de Pipeline:</label>\n                        <div class=\"pipeline-selector\">\n                            ${Object.entries(this.pipelines).map(([key, p]) => html`\n                                <button \n                                    class=\"pipeline-btn ${this.currentPipeline === key ? 'active' : ''}\"\n                                    @click=\"${() => this.setPipeline(key)}\"\n                                    ?disabled=\"${this.isRunning}\"\n                                >\n                                    ${p.name}\n                                </button>\n                            `)}\n                        </div>\n                    </div>\n                    \n                    <div class=\"control-group\">\n                        <label>Acciones:</label>\n                        <div class=\"action-buttons\">\n                            <button \n                                class=\"btn\" \n                                @click=\"${this.runPipeline}\"\n                                ?disabled=\"${this.isRunning}\"\n                            >\n                                <i class=\"ph-play\"></i>\n                                ${this.isRunning ? 'Ejecutando...' : 'Ejecutar'}\n                            </button>\n                            <button \n                                class=\"btn secondary\" \n                                @click=\"${this.stopPipeline}\"\n                                ?disabled=\"${!this.isRunning}\"\n                            >\n                                <i class=\"ph-stop\"></i>\n                                Detener\n                            </button>\n                            <button \n                                class=\"btn secondary\" \n                                @click=\"${this.resetPipeline}\"\n                                ?disabled=\"${this.isRunning}\"\n                            >\n                                <i class=\"ph-arrow-clockwise\"></i>\n                                Reset\n                            </button>\n                        </div>\n                    </div>\n                    \n                    <div class=\"control-group\">\n                        <label>Velocidad:</label>\n                        <div class=\"speed-control\">\n                            <input \n                                type=\"range\" \n                                min=\"500\" \n                                max=\"3000\" \n                                step=\"250\"\n                                .value=\"${this.animationSpeed}\"\n                                @input=\"${this.setAnimationSpeed}\"\n                                class=\"speed-slider\"\n                            />\n                            <span>${this.animationSpeed}ms</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"pipeline-stats\">\n                    <div class=\"stat-card\">\n                        <div class=\"stat-value\">${completedSteps}/${totalSteps}</div>\n                        <div class=\"stat-label\">Pasos Completados</div>\n                    </div>\n                    <div class=\"stat-card\">\n                        <div class=\"stat-value\">${Math.round((completedSteps / totalSteps) * 100)}%</div>\n                        <div class=\"stat-label\">Progreso</div>\n                    </div>\n                    <div class=\"stat-card\">\n                        <div class=\"stat-value\">~${Math.round(totalDuration / 60)}m</div>\n                        <div class=\"stat-label\">Duración Total</div>\n                    </div>\n                    <div class=\"stat-card\">\n                        <div class=\"stat-value\">${this.pipelineHistory.length}</div>\n                        <div class=\"stat-label\">Ejecuciones</div>\n                    </div>\n                </div>\n\n                <div class=\"pipeline-info\">\n                    <h3 class=\"pipeline-title\">${pipeline.name}</h3>\n                    <p class=\"pipeline-description\">${pipeline.description}</p>\n                    <div class=\"pipeline-trigger\">${pipeline.trigger}</div>\n                </div>\n\n                <div class=\"pipeline-visualization\">\n                    <div class=\"pipeline-steps\">\n                        ${pipeline.steps.map((step, index) => {\n                            const status = this.getStepStatus(index);\n                            const progress = status === 'running' ? Math.random() * 100 : (status === 'completed' ? 100 : 0);\n                            \n                            return html`\n                                <div class=\"pipeline-step ${status}\">\n                                    <div class=\"step-icon\">\n                                        ${status === 'completed' ? html`<i class=\"ph-check\"></i>` : \n                                          status === 'running' ? html`<i class=\"ph-spinner\"></i>` :\n                                          status === 'failed' ? html`<i class=\"ph-x\"></i>` :\n                                          html`<i class=\"${step.icon}\"></i>`}\n                                    </div>\n                                    <div class=\"step-content\">\n                                        <h4 class=\"step-name\">${step.name}</h4>\n                                        <p class=\"step-description\">${step.description}</p>\n                                        <div class=\"step-commands\">\n                                            ${step.commands.map(cmd => html`\n                                                <span class=\"step-command\">${cmd}</span>\n                                            `)}\n                                        </div>\n                                    </div>\n                                    <div class=\"step-duration\">\n                                        <i class=\"ph-clock\"></i>\n                                        ~${step.duration}s\n                                    </div>\n                                    ${status === 'running' ? html`\n                                        <div class=\"step-progress\" style=\"width: ${progress}%\"></div>\n                                    ` : ''}\n                                </div>\n                            `;\n                        })}\n                    </div>\n                </div>\n\n                <div class=\"yaml-section\">\n                    <div class=\"yaml-header\">\n                        <h3 class=\"yaml-title\">\n                            <i class=\"ph-file-code\"></i>\n                            Ejemplo de GitHub Actions YAML\n                        </h3>\n                        <div class=\"example-selector\">\n                            <select @change=\"${e => this.setExampleType(e.target.value)}\">\n                                ${Object.entries(this.yamlExamples).map(([key, example]) => html`\n                                    <option value=\"${key}\" ?selected=\"${this.selectedExampleType === key}\">\n                                        ${example.name}\n                                    </option>\n                                `)}\n                            </select>\n                        </div>\n                        <button class=\"btn secondary\" @click=\"${this.toggleYamlCode}\">\n                            <i class=\"ph-${this.showYamlCode ? 'eye-slash' : 'eye'}\"></i>\n                            ${this.showYamlCode ? 'Ocultar' : 'Mostrar'} Código\n                        </button>\n                    </div>\n                    \n                    ${this.showYamlCode ? html`\n                        <div class=\"yaml-code\">${this.yamlExamples[this.selectedExampleType].content}</div>\n                    ` : ''}\n                </div>\n\n                ${this.pipelineHistory.length > 0 ? html`\n                    <div class=\"yaml-section\">\n                        <h3 class=\"yaml-title\">\n                            <i class=\"ph-clock-countdown\"></i>\n                            Historial de Ejecuciones\n                        </h3>\n                        ${this.pipelineHistory.map(run => html`\n                            <div style=\"display: flex; justify-content: space-between; padding: var(--space-sm) 0; border-bottom: 1px solid var(--border-color);\">\n                                <span>${this.pipelines[run.pipeline].name}</span>\n                                <span>${run.timestamp.toLocaleTimeString()}</span>\n                                <span>${run.duration}s</span>\n                                <span style=\"color: var(--success);\">✓ ${run.status}</span>\n                            </div>\n                        `)}\n                    </div>\n                ` : ''}\n            </div>\n        `;\n    }\n}\n\ncustomElements.define('cicd-pipeline-visualizer', CicdPipelineVisualizer);"],"names":["CicdPipelineVisualizer","LitElement","pipelineKey","pipeline","startTime","i","stepDuration","endTime","type","event","ms","resolve","stepIndex","total","step","totalSteps","completedSteps","totalDuration","html","key","index","status","progress","cmd","e","example","run","__publicField","css"],"mappings":"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"}